import random
import time

def ajustar_dificultad_enemigos(personajes, factor_ajuste=0.6):
    """
    Ajusta la dificultad de los enemigos para balancear el juego.
    
    :param personajes: Lista de personajes originales
    :param factor_ajuste: Factor para reducir la dificultad (0.6 = reducir a 60%)
    :return: Nueva lista de personajes con stats ajustadas
    """
    personajes_ajustados = []
    for personaje in personajes:
        personaje_ajustado = Personaje(
            personaje.nombre,
            salud=max(100, int(personaje.salud * factor_ajuste)),
            poder_de_ataque=max(10, int(personaje.poder_de_ataque * factor_ajuste)),
            defensa=max(5, int(personaje.defensa * factor_ajuste)),
            ataque_energia=max(50, int(personaje.ataque_energia * factor_ajuste))
        )
        personajes_ajustados.append(personaje_ajustado)
    return personajes_ajustados

def modo_aventura(goku, personajes):
    print("\n¡Bienvenido al Modo Aventura de Dragon Ball!")
    print("Goku deberá viajar por diferentes planetas, enfrentando enemigos y haciéndose más fuerte.")
    
    print("\nModos de Ruta:")
    print("1. Ruta Óptima (usando Dijkstra)")
    print("2. Exploración Libre")
    
    while True:
        try:
            modo_ruta = int(input("Selecciona el modo de ruta (1-2): "))
            if modo_ruta in [1, 2]:
                break
            else:
                print("Por favor, selecciona 1 o 2.")
        except ValueError:
            print("Por favor, ingresa un número válido.")
    
    # Crear el grafo de planetas
    universo = GrafoAventura()
    
    # Definir planetas con su dificultad y beneficios
    planetas_info = {
        "Tierra": {
            "dificultad": 1,
            "beneficios": {"salud": 100, "poder_de_ataque": 20, "defensa": 10}
        },
        "Namek": {
            "dificultad": 2,
            "beneficios": {"salud": 150, "poder_de_ataque": 30, "defensa": 15}
        },
        "Planeta Vegeta": {
            "dificultad": 3,
            "beneficios": {"salud": 200, "poder_de_ataque": 40, "defensa": 20}
        },
        "Planeta de Bills": {
            "dificultad": 4,
            "beneficios": {"salud": 250, "poder_de_ataque": 50, "defensa": 25}
        },
        "Planeta Zeno": {
            "dificultad": 5,
            "beneficios": {"salud": 300, "poder_de_ataque": 60, "defensa": 30}
        }
    }
    
    # Agregar planetas al grafo
    for planeta, info in planetas_info.items():
        universo.agregar_planeta(planeta, info["dificultad"], info["beneficios"])
    
    # Agregar conexiones entre planetas (distancias)
    universo.agregar_conexion("Tierra", "Namek", 2)
    universo.agregar_conexion("Tierra", "Planeta Vegeta", 3)
    universo.agregar_conexion("Namek", "Planeta Vegeta", 2)
    universo.agregar_conexion("Planeta Vegeta", "Planeta de Bills", 4)
    universo.agregar_conexion("Planeta de Bills", "Planeta Zeno", 5)
    universo.agregar_conexion("Namek", "Planeta de Bills", 3)
    
    # Guardar stats originales de Goku
    stats_originales = {
        "salud": goku.salud,
        "poder_de_ataque": goku.poder_de_ataque,
        "defensa": goku.defensa,
        "ataque_energia": goku.ataque_energia
    }
    
    if modo_ruta == 1:
        # Modo Ruta Óptima (Dijkstra)
        distancias, ruta = universo.dijkstra("Tierra")
        ruta_planetas = ruta["Planeta Zeno"]
        print("\nRuta óptima calculada para maximizar beneficios:")
        for i, planeta in enumerate(ruta_planetas):
            print(f"{i+1}. {planeta}")
    else:
        # Modo Exploración Libre
        ruta_planetas = []
        planetas_disponibles = list(planetas_info.keys())
        planetas_disponibles.remove("Tierra")  # Comenzamos en la Tierra
        ruta_planetas.append("Tierra")
        
        print("\nComenzarás tu aventura en la Tierra.")
        for i in range(4):  # 4 elecciones más después de la Tierra
            print(f"\nPlanetas disponibles para visitar:")
            for j, planeta in enumerate(planetas_disponibles, 1):
                print(f"{j}. {planeta} (Dificultad: {planetas_info[planeta]['dificultad']})")
            
            while True:
                try:
                    eleccion = int(input(f"\nElige tu destino (1-{len(planetas_disponibles)}): "))
                    if 1 <= eleccion <= len(planetas_disponibles):
                        planeta_elegido = planetas_disponibles.pop(eleccion - 1)
                        ruta_planetas.append(planeta_elegido)
                        break
                    else:
                        print("Opción no válida. Intenta de nuevo.")
                except ValueError:
                    print("Por favor, ingresa un número válido.")
    
    # Recorrer cada planeta en la ruta
    for planeta_nombre in ruta_planetas:
        planeta = universo.planetas[planeta_nombre]
        print(f"\n¡Llegando al planeta {planeta_nombre}!")
        print(f"Nivel de dificultad: {planeta.dificultad}/5")
        
        # Generar enemigos según la dificultad del planeta
        enemigos = []
        for i in range(5):  # 5 batallas por planeta
            enemigo = random.choice(personajes)
            # Ya no se amplifican las stats del enemigo por dificultad del planeta
            enemigos.append(enemigo)
        
        # Realizar las 5 batallas
        for i, enemigo in enumerate(enemigos, 1):
            print(f"\nBatalla {i} en {planeta_nombre}:")
            print(f"¡Goku vs {enemigo.nombre}!")
            input("Presiona ENTER para comenzar la batalla...")
            
            ganador = batalla(goku, enemigo)
            if ganador == enemigo:
                print("\n¡Game Over! Goku ha sido derrotado en su aventura.")
                return False
            
            # Restaurar parte de la salud después de cada batalla
            goku.salud = min(stats_originales["salud"], goku.salud + 100)
        
        # Aplicar beneficios del planeta
        for stat, valor in planeta.beneficios.items():
            if stat == "salud":
                goku.salud += valor
            elif stat == "poder_de_ataque":
                goku.poder_de_ataque += valor
            elif stat == "defensa":
                goku.defensa += valor
        
        print(f"\n¡Goku ha completado los desafíos de {planeta_nombre}!")
        print("Stats actuales de Goku:")
        print(f"Salud: {goku.salud}")
        print(f"Poder de ataque: {goku.poder_de_ataque}")
        print(f"Defensa: {goku.defensa}")
        
        input("\nPresiona ENTER para continuar la aventura...")
    
    print("\n¡Felicidades! ¡Goku ha completado su aventura por los 5 planetas!")
    print("Mejoras totales obtenidas:")
    print(f"Salud: +{goku.salud - stats_originales['salud']}")
    print(f"Poder de ataque: +{goku.poder_de_ataque - stats_originales['poder_de_ataque']}")
    print(f"Defensa: +{goku.defensa - stats_originales['defensa']}")
    return True

# Ajustar dificultad de los personajes al inicio
personajes = ajustar_dificultad_enemigos(personajes)




"""# Definir la lista de personajes ANTES de llamar a la función de ajuste
personajes = [
    Personaje("Raditz", salud=350, poder_de_ataque=50, defensa=30, ataque_energia=100),
    Personaje("Androide 17", salud=500, poder_de_ataque=60, defensa=40, ataque_energia=120),
    # Añade el resto de tus personajes aquí
    Personaje("Goku (Super Saiyan 4)", salud=1000, poder_de_ataque=100, defensa=80, ataque_energia=200)
]

# Luego ajustar la dificultad
personajes = ajustar_dificultad_enemigos(personajes)"""


